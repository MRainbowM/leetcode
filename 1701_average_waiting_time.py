# https://leetcode.com/problems/average-waiting-time/description

"""
1701. Average Waiting Time
Среднее время ожидания

Есть ресторан с одним шеф-поваром.
Вам дается массив customers, где customers[i] = [arrival^i, time^i]:
arrival^i время прибытия клиента.
Время прибытия сортируется в неубывающем порядке i^th.
time^i время, необходимое для подготовки заказа клиента i^th.
Когда приходит клиент, он отдает повару свой заказ,
и повар начинает готовить его, как только он свободен.
Клиент ждет, пока повар закончит готовить его заказ.
Шеф-повар не готовит еду более чем для одного клиента одновременно.
Шеф-повар готовит еду для клиентов в том порядке,
в котором они были указаны во входных данных.

Верните среднее время ожидания всех клиентов.
Решения в пределах фактического ответа считаются принятыми 10^-5

Example 1:

Input: customers = [[1,2],[2,5],[4,3]]
Output: 5.00000
Explanation:
1) Первый клиент приходит в момент времени 1,
повар принимает его заказ и начинает готовить его немедленно
в момент времени 1 и заканчивает в момент времени 3,
поэтому время ожидания первого клиента составляет 3 - 1 = 2.
2) Второй клиент приходит в момент времени 2,
повар принимает его заказ и начинает готовить его в момент времени 3
и заканчивает в момент времени 8,
поэтому время ожидания второго клиента составляет 8 - 2 = 6.
3) Третий клиент приходит в момент времени 4,
повар принимает его заказ и начинает готовить его в момент времени 8
и заканчивает в момент времени 11,
поэтому время ожидания третьего клиента составляет 11 - 4 = 7.
Таким образом, среднее время ожидания = (2 + 6 + 7) / 3 = 5.


Example 2:

Input: customers = [[5,2],[5,4],[10,3],[20,1]]
Output: 3.25000
Explanation:
1) Первый клиент приходит в момент времени 5,
повар принимает его заказ и начинает готовить его немедленно в момент времени 5
и заканчивает в момент времени 7,
поэтому время ожидания первого клиента составляет 7 - 5 = 2.
2) Второй клиент приходит в момент времени 5,
повар принимает его заказ и начинает готовить его немедленно в момент времени 7
и заканчивает в момент времени 11,
поэтому время ожидания второго клиента составляет 11 - 5 = 6.
3) Третий клиент приходит в момент времени 10,
повар принимает его заказ и начинает готовить его немедленно в момент времени 11
и заканчивает в момент времени 14,
поэтому время ожидания третьего клиента составляет 14 - 10 = 4.
4) Четвертый клиент приходит в момент времени 20,
повар принимает его заказ и начинает готовить его немедленно в момент времени 20
и заканчивает в время 21,
поэтому время ожидания четвертого клиента составляет 21 - 20 = 1.
Таким образом, среднее время ожидания = (2 + 6 + 4 + 1) / 4 = 3,25.

Constraints:

1 <= customers.length <= 105
1 <= arrival^i, time^i <= 104
arrival^i <= arrival^i+1
"""
from typing import List


class Solution:
    def averageWaitingTime(self, customers: List[List[int]]) -> float:
        """
        Runtime: 32ms (29.03%)
        Memory: 49.6MB (74.88%)
        """
        start = customers[0][0]
        wait_time_total = 0

        for customer in customers:
            start = max(start, customer[0])
            end = start + customer[1]
            time = end - customer[0]
            wait_time_total += time
            start = end

        return wait_time_total / len(customers)


def tests():
    solution = Solution()

    result = solution.averageWaitingTime(
        customers=[[1, 2], [2, 5], [4, 3]]
    )
    assert result == 5.0

    result = solution.averageWaitingTime(
        customers=[[5, 2], [5, 4], [10, 3], [20, 1]]
    )

    assert result == 3.25


if __name__ == "__main__":
    tests()

    print("ВСЕ ЧИКИ-ПУКИ!!!")
